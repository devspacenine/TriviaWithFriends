{
  "author": {
    "name": "Lee Powell",
    "email": "lee@leepowell.co.uk",
    "url": "http://leepowell.co.uk"
  },
  "name": "mongoose-validator",
  "description": "Validators for mongoose models utilising node-validator",
  "keywords": [
    "mongoose",
    "validate",
    "models"
  ],
  "version": "0.1.3",
  "main": "./lib",
  "homepage": "http://github.com/leepowellcouk/mongoose-validator",
  "repository": {
    "type": "git",
    "url": "git://github.com/leepowellcouk/mongoose-validator.git"
  },
  "dependencies": {
    "validator": "0.4.x"
  },
  "engines": {
    "node": ">=0.2.2"
  },
  "readme": "Mongoose Validator\n==================\n\nValidators for [Mongoose](http://mongoosejs.com) schemas utilising [node-validator](https://github.com/chriso/node-validator).\n\nMongoose Validator simply returns Mongoose style validation objects that utilise node-validator for the data validation.\n\n##Installation##\n\n\tnpm install mongoose-validator\n\n##Usage##\n\n\tvar mongoose = require('mongoose'),\n\t\tmongooseValidator = require('mongoose-validator'),\n\t\tvalidator = mongooseValidator.validator;\n\t\n\tvar nameValidator = [validator.len(3, 50), validator.isAlphanumeric()];\n\t\n\tvar Schema = new mongoose.Schema({\n\t\tname: {type: String, required: true, validate: nameValidator}\n\t});\n\nError objects are returned as normal via Mongoose.\n\n##Error Messages##\n\nBy default error messages are used from node-validator, however you can use your own by passing them into the validation method.\n\n\tvalidator.len(3, 50, 'Name should be between 3 and 50 characters in length')\n\nAlternatively you can overwrite any of the defaultError messages from node-validator for use in all calls to a particaular method.\n\t\n\tvar mongoose = require('mongoose'),\n\t\tmongooseValidator = require('mongoose-validator'),\n\t\tvalidator = mongooseValidator.validator;\n\t\n\t// batch\n\t\t\n\tmongooseValidator.setDefaultErrorMessage({\n\t\tlen: 'A new error message that will be used for all len calls',\n\t\tisRegex: 'A new error message that will be used for all isRegex calls'\n\t});\n\t\n\t// single\n\t\n\tmongooseValidator.setDefaultErrorMessage('len', 'A new error message that will be used for all len calls');",
  "_id": "mongoose-validator@0.1.3",
  "_from": "mongoose-validator@ 0.x.x"
}
